{"version":3,"sources":["logo.svg","AddEvent.js","Day.js","Board.js","App.js","reportWebVitals.js","index.js"],"names":["AddEvent","props","input","useRef","className","type","placeholder","ref","value","onClick","task","current","settasks","ind","Day","day","DayComponent","date","getDay","cls2","cls","OpenAddTasks","index","getDate","ArrActions","length","Board","SetEvent","arr","state","ArrDays","slice","push","setState","cild","undefined","getDaysInMonth","month","year","Date","i","DNow","setDate","DayOfWeek","CountDayInMonth","getMonth","getFullYear","lenBeafor","d","j","children","a1","this","a2","console","log","map","item","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8a0832d6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useRef } from 'react'\r\nimport './AddEvent.css'\r\nconst AddEvent = (props) => {\r\n    let input = useRef(null);\r\n    const AddToTasks = (task) => {\r\n        props.settasks(props.ind,task);\r\n    }\r\n    return (<div className=\"divAdd\">\r\n        <b>Add Event Hear</b>\r\n        <p></p>\r\n        <input type=\"text\" placeholder=\"Enter Please Tasks\" ref={input} />\r\n        <input type=\"button\" value=\"Add\" onClick={() => AddToTasks(input.current.value)} />\r\n    </div>)\r\n}\r\nexport default AddEvent;","import React, { useState } from 'react'\r\nimport AddEvent from './AddEvent'\r\nimport './Day.css'\r\nconst Day = (props) => {\r\n    let day = props.DayComponent.date.getDay();\r\n\r\n    return (<div className={\"divOfDay\"+props.DayComponent.cls2 + props.DayComponent.cls + (day == 6 ? \" Shbat\" : \"\")}\r\n        onClick={() =>props.DayComponent.OpenAddTasks(props.DayComponent.index)} >\r\n        <p>The Day In Month :  {props.DayComponent.date.getDate()} </p>\r\n        <p> The Day In Week : {props.DayComponent.date.getDay() + 1}</p>\r\n        <b>The Count Of Tasks Is : {props.DayComponent.ArrActions.length}</b>\r\n    </div>);\r\n}\r\nexport default Day;","import React, { useEffect, useState } from 'react'\r\nimport Day from './Day'\r\nimport AddEvent from './AddEvent';\r\nimport './Board.css'\r\n\r\nexport default class Board extends React.Component {\r\n    SetEvent = (index, task) => {\r\n        let arr = this.state.ArrDays.slice();\r\n        arr[index].ArrActions.push(task);\r\n        arr[index].cls2 = \"\";\r\n        this.setState({ ArrActions: arr });\r\n        this.setState({ cild: undefined });\r\n    }\r\n    OpenAddTasks = (index) => {\r\n        let arr = this.state.ArrDays.slice();\r\n        arr[index].cls2 = \" current\";\r\n        this.setState({ ArrDays: arr });\r\n        this.setState({\r\n            cild: <AddEvent\r\n                settasks={this.SetEvent} ind={index} />\r\n        });\r\n    }\r\n\r\n    getDaysInMonth = function (month, year) {\r\n        return new Date(year, month, 0).getDate();\r\n    };\r\n    constructor(props) {\r\n        super();\r\n        let arr = [];\r\n        let i = 0;\r\n        let DNow = new Date();\r\n        DNow.setDate(1);\r\n        let DayOfWeek = DNow.getDay() + 1;\r\n        let CountDayInMonth = this.getDaysInMonth(DNow.getMonth() + 1, DNow.getFullYear());\r\n        let lenBeafor = this.getDaysInMonth(DNow.getMonth() == 0 ? 12 : DNow.getMonth() - 1, DNow.getMonth() == 0 ? DNow.getFullYear() - 1 : DNow.getFullYear());\r\n        for (i = 0; i < DayOfWeek - 1; i++) {\r\n            let d = new Date(DNow.getMonth() == 0 ? d.DNow.getFullYear() - 1 : DNow.getFullYear()\r\n                , DNow.getMonth() == 0 ? 12 : DNow.getMonth() - 1, lenBeafor - (DayOfWeek - 2) + i);\r\n            arr[i] = {\r\n                date: d,\r\n                ArrActions: [],\r\n                OpenAddTasks: this.OpenAddTasks,\r\n                cls: \" LightBackgroundBolor\",\r\n                cls2: \"\",\r\n                index: i\r\n            }\r\n        }\r\n        for (let j = 1; j <= CountDayInMonth; i++ , j++) {\r\n            let d = new Date();\r\n            d.setDate(j);\r\n            arr[i] = {\r\n                date: d,\r\n                ArrActions: [],\r\n                cls: \"\",\r\n                cls2: \"\",\r\n                OpenAddTasks: this.OpenAddTasks,\r\n                index: i\r\n\r\n            }\r\n        }\r\n        for (let j = 1; i < 35; i++ , j++) {\r\n            let d = new Date(DNow.getMonth() == 11 ? d.DNow.getFullYear() + 1 : DNow.getFullYear()\r\n                , DNow.getMonth() == 11 ? 1 : DNow.getMonth() + 1, j);\r\n            arr[i] = {\r\n                date: d,\r\n                ArrActions: [],\r\n                OpenAddTasks: this.OpenAddTasks,\r\n                cls: \" LightBackgroundBolor\",\r\n                cls2: \"\",\r\n                index: i\r\n            }\r\n        }\r\n        this.state = { ArrDays: arr, cild: this.children };\r\n    }\r\n\r\n    render() {\r\n        let a1 = this.state.ArrDays[0];\r\n        let a2 = this.state.ArrDays[34];\r\n        console.log(a1);\r\n        return (<div>\r\n            <div className=\"YearMonth\">\r\n            <b>Year {new Date().getFullYear()}</b>\r\n            <p></p>\r\n            <b>Month {(a1.date.getMonth()+1) +\" - \"+(a2.date.getMonth()+1)}</b>\r\n            </div>\r\n            <p className=\"calander\">My Clander</p>{\r\n                this.state.ArrDays.map((item, index) => {\r\n                    return <Day DayComponent={item} cls={\"divOfDay\"} />\r\n                })\r\n            }\r\n            {this.state.cild}\r\n        </div>\r\n        );\r\n    }\r\n}\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Board from './Board';\n\nfunction App() {\n  return (\n    <>\n      <Board />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}